{"version":3,"sources":["Components/Searchbar/Searchbar.js","Context/ThemeContext.js","Hooks/useTheme.js","Components/NavBar/NavBar.js","Components/RecipeList/RecipeList.js","Hooks/useFetch.js","Pages/Home/Home.js","Pages/Recipe/Recipe.js","Pages/Search/Search.js","Pages/Create/Create.js","Assets/mode-icon.svg","Components/ThemeSelector/ThemeSelector.js","App/App.js","index.js"],"names":["Searchbar","useState","term","setTerm","webPage","useNavigate","className","onSubmit","e","preventDefault","htmlFor","type","id","onChange","target","value","required","ThemeContext","createContext","themeReducer","state","action","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","changeColor","changeMode","useTheme","context","useContext","undefined","Error","NavBar","style","background","to","RecipeList","recipes","length","map","recipe","title","cookingTime","method","substring","useFetch","url","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","statusText","json","name","console","log","abort","Home","Recipe","useParams","ingredients","ing","Search","queryString","useLocation","search","query","URLSearchParams","get","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","setIngredients","ingredientInput","useRef","handleSubmit","ref","onClick","trim","includes","prevIngredients","current","focus","i","themeColors","ThemeSelector","src","modeIcon","alt","filter","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38af6cb3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport './Searchbar.css'\r\n\r\nexport default function Searchbar() {\r\n    const [term, setTerm] = useState('')\r\n    const webPage = useNavigate()\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        webPage(`/search?q=${term}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"search\">Search</label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"search\"\r\n                    onChange={(e) => setTerm(e.target.value)}\r\n                    required\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { createContext, useReducer } from 'react'\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_COLOR':\r\n      return { ...state, color: action.payload }\r\n    case 'CHANGE_MODE':\r\n      return { ...state, mode: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [state, dispatch] = useReducer(themeReducer, {\r\n    color: '#58249c',\r\n    mode: 'dark'\r\n  })\r\n\r\n  const changeColor = (color) => {\r\n    dispatch({ type: 'CHANGE_COLOR', payload: color })\r\n  }\r\n\r\n  const changeMode = (mode) => {\r\n    dispatch({ type: 'CHANGE_MODE', payload: mode })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{...state, changeColor, changeMode}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../Context/ThemeContext'\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useTheme() must use inside the themeProvider\")\r\n    }\r\n    return context\r\n}","import { Link } from 'react-router-dom'\r\nimport React, { useContext } from 'react'\r\nimport Searchbar from '../Searchbar/Searchbar'\r\nimport './NavBar.css'\r\nimport { useTheme } from '../../Hooks/useTheme'\r\n\r\nexport default function NavBar() {\r\n    const { color } = useTheme()\r\n    return (\r\n        <div className=\"navbar\" style={{ background: color }}>\r\n            <nav>\r\n                <Link to=\"/\" className=\"brand\">\r\n                    <h1>Cooking Ninja</h1>\r\n                </Link>\r\n                <Searchbar />\r\n                <Link to=\"/create\">\r\n                    <h1>Create Recipe</h1>\r\n                </Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import { useTheme } from '../../Hooks/useTheme';\r\nimport { Link } from 'react-router-dom'\r\nimport './RecipeList.css'\r\n\r\nexport default function RecipeList({ recipes }) {\r\n    const { mode } = useTheme()\r\n\r\n    if (recipes.length === 0) {\r\n        return <div className=\"error\">No recipes found.</div>\r\n    }\r\n    return (\r\n        <div className=\"recipe-list\">\r\n            {recipes.map(recipe => (\r\n                <div key={recipe.id} className={`card ${mode}`}>\r\n                    <h3>{recipe.title}</h3>\r\n                    <p>{recipe.cookingTime} to make</p>\r\n                    <div>{recipe.method.substring(0, 100)}...Read More</div>\r\n                    <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nexport const useFetch = (url, method = \"GET\") => {\r\n  const [data, setData] = useState(null)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [options, setOptions] = useState(null)\r\n  const postData = (postData) => {\r\n    setOptions({\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(postData)   \r\n    })\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController()\r\n    const fetchData = async (fetchOptions) => {\r\n      setIsPending(true)\r\n      \r\n      try {\r\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\r\n        if(!res.ok) {\r\n          throw new Error(res.statusText)\r\n        }\r\n        const data = await res.json()\r\n        \r\n        setData(data)\r\n        setError(null)\r\n        setIsPending(false)\r\n      } catch (err) {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"The fetch was aborted\")\r\n        } else {\r\n          setIsPending(false)\r\n          setError('Could not fetch the data.')\r\n        }\r\n      }\r\n    }\r\n\r\n    if (method === \"GET\") {\r\n      fetchData()\r\n    } \r\n\r\n    if (method === \"POST\" && options) {\r\n      fetchData(options)\r\n    }\r\n    return () => {\r\n      controller.abort()\r\n    }\r\n\r\n  }, [url, options, method])\r\n\r\n  return { data, isPending, error, postData }\r\n}","import RecipeList from '../../Components/RecipeList/RecipeList.js'\r\nimport { useFetch } from '../../Hooks/useFetch.js'\r\nimport './Home.css'\r\n\r\nexport default function Home() {\r\n\r\n    const { data, isPending, error } = useFetch('http://localhost:3000/recipes')\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {isPending && <p className=\"loading\">Loading</p>}\r\n            {data && <RecipeList recipes={data}/>}\r\n        </div>\r\n    )\r\n}\r\n","import { useParams } from 'react-router-dom'\r\nimport { useFetch } from '../../Hooks/useFetch'\r\nimport { useTheme } from '../../Hooks/useTheme'\r\n\r\n// styles\r\nimport './Recipe.css'\r\n\r\nexport default function Recipe() {\r\n  const { id } = useParams()\r\n  const url = 'http://localhost:3000/recipes/' + id\r\n  const { error, isPending, data: recipe } = useFetch(url)\r\n  const { mode } = useTheme()\r\n\r\n  return (\r\n    <div className={`recipe ${mode}`}>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {recipe && (\r\n        <>\r\n          <h2 className=\"page-title\">{recipe.title}</h2>\r\n          <p>Takes {recipe.cookingTime} to cook.</p>\r\n          <ul>\r\n            {recipe.ingredients.map(ing => <li key={ing}>{ing}</li>)}\r\n          </ul>\r\n          <p className=\"method\">{recipe.method}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { useFetch } from '../../Hooks/useFetch'\r\nimport { useLocation } from 'react-router-dom'\r\nimport RecipeList from '../../Components/RecipeList/RecipeList'\r\n\r\n// styles\r\nimport './Search.css'\r\n\r\nexport default function Search() {\r\n  const queryString = useLocation().search\r\n  const queryParams = new URLSearchParams(queryString)\r\n  const query = queryParams.get('q')\r\n\r\n  const url = 'http://localhost:3000/recipes?q=' + query\r\n  const { error, isPending, data } = useFetch(url)\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-title\">Recipes including \"{query}\"</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading...</p>}\r\n      {data && <RecipeList recipes={data} />}\r\n    </div>\r\n  )\r\n}","\r\nimport React, { useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useFetch } from '../../Hooks/useFetch';\r\nimport './Create.css'\r\n\r\nexport default function Create() {\r\n    const [title, setTitle] = useState('')\r\n    const [method, setMethod] = useState('')\r\n    const [cookingTime, setCookingTime] = useState('')\r\n    const [newIngredient, setNewIngredient] = useState('')\r\n    const [ingredients, setIngredients] = useState([])\r\n    const ingredientInput = useRef(null)\r\n\r\n    const { postData, data, error } = useFetch('http://localhost:3000/recipes', 'POST')\r\n\r\n    const webPage = useNavigate()\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        await postData({ title, ingredients, method, cookingTime: `${cookingTime} minutes`})\r\n        await webPage('/')\r\n    }\r\n\r\n\r\n    const handleAdd = (e) => {\r\n        e.preventDefault()\r\n        const ing = newIngredient.trim()\r\n        if (ing && !ingredients.includes(ing)) {\r\n            setIngredients(prevIngredients => [...prevIngredients, ing])\r\n        }\r\n        setNewIngredient('')\r\n        ingredientInput.current.focus()\r\n    }\r\n    return (\r\n        <div className=\"create\">\r\n            <h2 className=\"page-title\">Add a new recipe</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"\">\r\n                    <span>Recipe title:</span>\r\n                    <input \r\n                        type=\"text\" \r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        value={title}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Recipe ingredients:</span>\r\n                    <div className=\"ingredients\">\r\n                        <input \r\n                            type=\"text\" \r\n                            onChange={(e) => setNewIngredient(e.target.value)}\r\n                            value={newIngredient}\r\n                            ref={ingredientInput}\r\n                        />\r\n                        <button onClick={handleAdd} className=\"btn\">Add</button>\r\n                    </div>\r\n                </label>\r\n                <p>Current ingredients: {ingredients.map(i => <em key={i}>{i},</em>)}</p>\r\n                <label>\r\n                    <span>Recipe method:</span>\r\n                    <textarea \r\n                        onChange={(e) => setMethod(e.target.value)}\r\n                        value={method}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <span>Cooking time:</span>\r\n                    <input \r\n                        type=\"number\"\r\n                        onChange={(e) => setCookingTime(e.target.value)} \r\n                        value={cookingTime}\r\n                    />\r\n                </label>\r\n\r\n                <button onClick={handleSubmit} className=\"btn\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mode-icon.651cf792.svg\";","\r\nimport { useTheme } from '../../Hooks/useTheme'\r\nimport './ThemeSelector.css';\r\nimport modeIcon from '../../Assets/mode-icon.svg'\r\n\r\nconst themeColors = ['#7FFFD4', '#FAEBD7', '#F0F8FF']\r\nexport default function ThemeSelector() {\r\n    const { changeColor, changeMode, mode } = useTheme();\r\n    const toggleMode = () => {\r\n        changeMode( mode === 'dark' ? 'light' : 'dark')\r\n    }\r\n    return (\r\n        <div className=\"theme-selector\">\r\n            <div className=\"mode-toggle\">\r\n                <img \r\n                    onClick={toggleMode}\r\n                    src={modeIcon} \r\n                    alt=\"shutup\"\r\n                    style={{ filter: mode === 'dark' ? 'invert(100%)' : 'invert(20%)' }}\r\n                />\r\n            </div>\r\n            <div className=\"theme-buttons\">\r\n                {themeColors.map(color => (\r\n                    <div\r\n                        key={color}\r\n                        onClick={() => changeColor(color)}\r\n                        style={{ background: color}}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\nimport NavBar from '../Components/NavBar/NavBar'\nimport Home from '../Pages/Home/Home'\nimport Recipe from '../Pages/Recipe/Recipe'\nimport Search from '../Pages/Search/Search'\nimport Create from '../Pages/Create/Create'\nimport ThemeSelector from '../Components/ThemeSelector/ThemeSelector'\nimport { useTheme } from '../Hooks/useTheme'\n\nfunction App() {\n\n  const { mode } = useTheme()\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <NavBar />\n        <ThemeSelector />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route path=\"/create\" element={<Create />} />\n          <Route path=\"/search\" element={<Search />} />\n          <Route path=\"/recipes/:id\" element={<Recipe />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App.js';\nimport { ThemeProvider } from './Context/ThemeContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}